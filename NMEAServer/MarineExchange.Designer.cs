//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MarineExchangeModel", "FK_Client_Addresses_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NMEAServer.DBClient), "Client_Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NMEAServer.DBClientAddresses), true)]
[assembly: EdmRelationshipAttribute("MarineExchangeModel", "FK_Client_Authentication_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NMEAServer.DBClient), "Client_Authentication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NMEAServer.DBClientAuthentication), true)]
[assembly: EdmRelationshipAttribute("MarineExchangeModel", "FK_Subscription_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NMEAServer.DBClient), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NMEAServer.DBSubscription), true)]
[assembly: EdmRelationshipAttribute("MarineExchangeModel", "FK_Current_Connection_Subscription", "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NMEAServer.DBSubscription), "Current_Connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NMEAServer.DBCurrentConnection), true)]
[assembly: EdmRelationshipAttribute("MarineExchangeModel", "FK_Subscription_NMEA_Feeds", "NMEA_Feeds", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NMEAServer.DBNMEAFeeds), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NMEAServer.DBSubscription), true)]

#endregion

namespace NMEAServer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MarineExchangeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MarineExchangeEntities object using the connection string found in the 'MarineExchangeEntities' section of the application configuration file.
        /// </summary>
        public MarineExchangeEntities() : base("name=MarineExchangeEntities", "MarineExchangeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarineExchangeEntities object.
        /// </summary>
        public MarineExchangeEntities(string connectionString) : base(connectionString, "MarineExchangeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarineExchangeEntities object.
        /// </summary>
        public MarineExchangeEntities(EntityConnection connection) : base(connection, "MarineExchangeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBActivityLog> DBActivityLogs
        {
            get
            {
                if ((_DBActivityLogs == null))
                {
                    _DBActivityLogs = base.CreateObjectSet<DBActivityLog>("DBActivityLogs");
                }
                return _DBActivityLogs;
            }
        }
        private ObjectSet<DBActivityLog> _DBActivityLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBClient> DBClients
        {
            get
            {
                if ((_DBClients == null))
                {
                    _DBClients = base.CreateObjectSet<DBClient>("DBClients");
                }
                return _DBClients;
            }
        }
        private ObjectSet<DBClient> _DBClients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBClientAddresses> DBClientAddresses
        {
            get
            {
                if ((_DBClientAddresses == null))
                {
                    _DBClientAddresses = base.CreateObjectSet<DBClientAddresses>("DBClientAddresses");
                }
                return _DBClientAddresses;
            }
        }
        private ObjectSet<DBClientAddresses> _DBClientAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBClientAuthentication> DBClientAuthentications
        {
            get
            {
                if ((_DBClientAuthentications == null))
                {
                    _DBClientAuthentications = base.CreateObjectSet<DBClientAuthentication>("DBClientAuthentications");
                }
                return _DBClientAuthentications;
            }
        }
        private ObjectSet<DBClientAuthentication> _DBClientAuthentications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBCurrentConnection> DBCurrentConnections
        {
            get
            {
                if ((_DBCurrentConnections == null))
                {
                    _DBCurrentConnections = base.CreateObjectSet<DBCurrentConnection>("DBCurrentConnections");
                }
                return _DBCurrentConnections;
            }
        }
        private ObjectSet<DBCurrentConnection> _DBCurrentConnections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBDeviceType> DBDeviceTypes
        {
            get
            {
                if ((_DBDeviceTypes == null))
                {
                    _DBDeviceTypes = base.CreateObjectSet<DBDeviceType>("DBDeviceTypes");
                }
                return _DBDeviceTypes;
            }
        }
        private ObjectSet<DBDeviceType> _DBDeviceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBErrorLog> DBErrorLogs
        {
            get
            {
                if ((_DBErrorLogs == null))
                {
                    _DBErrorLogs = base.CreateObjectSet<DBErrorLog>("DBErrorLogs");
                }
                return _DBErrorLogs;
            }
        }
        private ObjectSet<DBErrorLog> _DBErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBNMEAFeeds> DBNMEAFeeds
        {
            get
            {
                if ((_DBNMEAFeeds == null))
                {
                    _DBNMEAFeeds = base.CreateObjectSet<DBNMEAFeeds>("DBNMEAFeeds");
                }
                return _DBNMEAFeeds;
            }
        }
        private ObjectSet<DBNMEAFeeds> _DBNMEAFeeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DBSubscription> DBSubscriptions
        {
            get
            {
                if ((_DBSubscriptions == null))
                {
                    _DBSubscriptions = base.CreateObjectSet<DBSubscription>("DBSubscriptions");
                }
                return _DBSubscriptions;
            }
        }
        private ObjectSet<DBSubscription> _DBSubscriptions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBActivityLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBActivityLogs(DBActivityLog dBActivityLog)
        {
            base.AddObject("DBActivityLogs", dBActivityLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBClients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBClients(DBClient dBClient)
        {
            base.AddObject("DBClients", dBClient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBClientAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBClientAddresses(DBClientAddresses dBClientAddresses)
        {
            base.AddObject("DBClientAddresses", dBClientAddresses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBClientAuthentications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBClientAuthentications(DBClientAuthentication dBClientAuthentication)
        {
            base.AddObject("DBClientAuthentications", dBClientAuthentication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBCurrentConnections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBCurrentConnections(DBCurrentConnection dBCurrentConnection)
        {
            base.AddObject("DBCurrentConnections", dBCurrentConnection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBDeviceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBDeviceTypes(DBDeviceType dBDeviceType)
        {
            base.AddObject("DBDeviceTypes", dBDeviceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBErrorLogs(DBErrorLog dBErrorLog)
        {
            base.AddObject("DBErrorLogs", dBErrorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBNMEAFeeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBNMEAFeeds(DBNMEAFeeds dBNMEAFeeds)
        {
            base.AddObject("DBNMEAFeeds", dBNMEAFeeds);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DBSubscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDBSubscriptions(DBSubscription dBSubscription)
        {
            base.AddObject("DBSubscriptions", dBSubscription);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iPAddress">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CheckUserByIP(global::System.String iPAddress)
        {
            ObjectParameter iPAddressParameter;
            if (iPAddress != null)
            {
                iPAddressParameter = new ObjectParameter("IPAddress", iPAddress);
            }
            else
            {
                iPAddressParameter = new ObjectParameter("IPAddress", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CheckUserByIP", iPAddressParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<DBNMEAFeeds> GetNMEAFeeds()
        {
            return base.ExecuteFunction<DBNMEAFeeds>("GetNMEAFeeds");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<DBNMEAFeeds> GetNMEAFeeds(MergeOption mergeOption)
        {
            return base.ExecuteFunction<DBNMEAFeeds>("GetNMEAFeeds", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="client_id">No Metadata Documentation available.</param>
        public ObjectResult<GetSubscriptions_Result> GetSubscriptions(Nullable<global::System.Int32> client_id)
        {
            ObjectParameter client_idParameter;
            if (client_id.HasValue)
            {
                client_idParameter = new ObjectParameter("client_id", client_id);
            }
            else
            {
                client_idParameter = new ObjectParameter("client_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetSubscriptions_Result>("GetSubscriptions", client_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="clientID">No Metadata Documentation available.</param>
        /// <param name="feedID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> HasSubscription(Nullable<global::System.Int32> clientID, Nullable<global::System.Int32> feedID)
        {
            ObjectParameter clientIDParameter;
            if (clientID.HasValue)
            {
                clientIDParameter = new ObjectParameter("clientID", clientID);
            }
            else
            {
                clientIDParameter = new ObjectParameter("clientID", typeof(global::System.Int32));
            }
    
            ObjectParameter feedIDParameter;
            if (feedID.HasValue)
            {
                feedIDParameter = new ObjectParameter("feedID", feedID);
            }
            else
            {
                feedIDParameter = new ObjectParameter("feedID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("HasSubscription", clientIDParameter, feedIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip_address">No Metadata Documentation available.</param>
        /// <param name="client_id">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> LogActivity(global::System.String ip_address, Nullable<global::System.Int32> client_id, global::System.String device_id)
        {
            ObjectParameter ip_addressParameter;
            if (ip_address != null)
            {
                ip_addressParameter = new ObjectParameter("ip_address", ip_address);
            }
            else
            {
                ip_addressParameter = new ObjectParameter("ip_address", typeof(global::System.String));
            }
    
            ObjectParameter client_idParameter;
            if (client_id.HasValue)
            {
                client_idParameter = new ObjectParameter("client_id", client_id);
            }
            else
            {
                client_idParameter = new ObjectParameter("client_id", typeof(global::System.Int32));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("LogActivity", ip_addressParameter, client_idParameter, device_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="error_description">No Metadata Documentation available.</param>
        /// <param name="stack_trace">No Metadata Documentation available.</param>
        /// <param name="error_thrown_from">No Metadata Documentation available.</param>
        /// <param name="inner_exception">No Metadata Documentation available.</param>
        /// <param name="target_site">No Metadata Documentation available.</param>
        /// <param name="error_datetime">No Metadata Documentation available.</param>
        /// <param name="nmea_feed_id">No Metadata Documentation available.</param>
        /// <param name="client_id">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        public int LogError(global::System.String error_description, global::System.String stack_trace, global::System.String error_thrown_from, global::System.String inner_exception, global::System.String target_site, Nullable<global::System.DateTime> error_datetime, Nullable<global::System.Int32> nmea_feed_id, Nullable<global::System.Int32> client_id, global::System.String device_id)
        {
            ObjectParameter error_descriptionParameter;
            if (error_description != null)
            {
                error_descriptionParameter = new ObjectParameter("error_description", error_description);
            }
            else
            {
                error_descriptionParameter = new ObjectParameter("error_description", typeof(global::System.String));
            }
    
            ObjectParameter stack_traceParameter;
            if (stack_trace != null)
            {
                stack_traceParameter = new ObjectParameter("stack_trace", stack_trace);
            }
            else
            {
                stack_traceParameter = new ObjectParameter("stack_trace", typeof(global::System.String));
            }
    
            ObjectParameter error_thrown_fromParameter;
            if (error_thrown_from != null)
            {
                error_thrown_fromParameter = new ObjectParameter("error_thrown_from", error_thrown_from);
            }
            else
            {
                error_thrown_fromParameter = new ObjectParameter("error_thrown_from", typeof(global::System.String));
            }
    
            ObjectParameter inner_exceptionParameter;
            if (inner_exception != null)
            {
                inner_exceptionParameter = new ObjectParameter("inner_exception", inner_exception);
            }
            else
            {
                inner_exceptionParameter = new ObjectParameter("inner_exception", typeof(global::System.String));
            }
    
            ObjectParameter target_siteParameter;
            if (target_site != null)
            {
                target_siteParameter = new ObjectParameter("target_site", target_site);
            }
            else
            {
                target_siteParameter = new ObjectParameter("target_site", typeof(global::System.String));
            }
    
            ObjectParameter error_datetimeParameter;
            if (error_datetime.HasValue)
            {
                error_datetimeParameter = new ObjectParameter("error_datetime", error_datetime);
            }
            else
            {
                error_datetimeParameter = new ObjectParameter("error_datetime", typeof(global::System.DateTime));
            }
    
            ObjectParameter nmea_feed_idParameter;
            if (nmea_feed_id.HasValue)
            {
                nmea_feed_idParameter = new ObjectParameter("nmea_feed_id", nmea_feed_id);
            }
            else
            {
                nmea_feed_idParameter = new ObjectParameter("nmea_feed_id", typeof(global::System.Int32));
            }
    
            ObjectParameter client_idParameter;
            if (client_id.HasValue)
            {
                client_idParameter = new ObjectParameter("client_id", client_id);
            }
            else
            {
                client_idParameter = new ObjectParameter("client_id", typeof(global::System.Int32));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("LogError", error_descriptionParameter, stack_traceParameter, error_thrown_fromParameter, inner_exceptionParameter, target_siteParameter, error_datetimeParameter, nmea_feed_idParameter, client_idParameter, device_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="deviceID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CheckUserByDevice(global::System.String deviceID)
        {
            ObjectParameter deviceIDParameter;
            if (deviceID != null)
            {
                deviceIDParameter = new ObjectParameter("DeviceID", deviceID);
            }
            else
            {
                deviceIDParameter = new ObjectParameter("DeviceID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CheckUserByDevice", deviceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="clientID">No Metadata Documentation available.</param>
        public ObjectResult<CheckUser_Result> FetchClientSubscriptions(Nullable<global::System.Int32> clientID)
        {
            ObjectParameter clientIDParameter;
            if (clientID.HasValue)
            {
                clientIDParameter = new ObjectParameter("clientID", clientID);
            }
            else
            {
                clientIDParameter = new ObjectParameter("clientID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CheckUser_Result>("FetchClientSubscriptions", clientIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip_address">No Metadata Documentation available.</param>
        /// <param name="client_id">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> LogOpenConnection(global::System.String ip_address, Nullable<global::System.Int32> client_id, global::System.String device_id)
        {
            ObjectParameter ip_addressParameter;
            if (ip_address != null)
            {
                ip_addressParameter = new ObjectParameter("ip_address", ip_address);
            }
            else
            {
                ip_addressParameter = new ObjectParameter("ip_address", typeof(global::System.String));
            }
    
            ObjectParameter client_idParameter;
            if (client_id.HasValue)
            {
                client_idParameter = new ObjectParameter("client_id", client_id);
            }
            else
            {
                client_idParameter = new ObjectParameter("client_id", typeof(global::System.Int32));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("LogOpenConnection", ip_addressParameter, client_idParameter, device_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip_address">No Metadata Documentation available.</param>
        /// <param name="client_id">No Metadata Documentation available.</param>
        /// <param name="device_id">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> LogCloseConnection(global::System.String ip_address, Nullable<global::System.Int32> client_id, global::System.String device_id)
        {
            ObjectParameter ip_addressParameter;
            if (ip_address != null)
            {
                ip_addressParameter = new ObjectParameter("ip_address", ip_address);
            }
            else
            {
                ip_addressParameter = new ObjectParameter("ip_address", typeof(global::System.String));
            }
    
            ObjectParameter client_idParameter;
            if (client_id.HasValue)
            {
                client_idParameter = new ObjectParameter("client_id", client_id);
            }
            else
            {
                client_idParameter = new ObjectParameter("client_id", typeof(global::System.Int32));
            }
    
            ObjectParameter device_idParameter;
            if (device_id != null)
            {
                device_idParameter = new ObjectParameter("device_id", device_id);
            }
            else
            {
                device_idParameter = new ObjectParameter("device_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("LogCloseConnection", ip_addressParameter, client_idParameter, device_idParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBActivityLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBActivityLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBActivityLog object.
        /// </summary>
        /// <param name="activity_log_id">Initial value of the activity_log_id property.</param>
        /// <param name="activity_datetime">Initial value of the activity_datetime property.</param>
        /// <param name="accessed_by_ip_address">Initial value of the accessed_by_ip_address property.</param>
        /// <param name="connection_datetime">Initial value of the connection_datetime property.</param>
        public static DBActivityLog CreateDBActivityLog(global::System.Int32 activity_log_id, global::System.DateTime activity_datetime, global::System.String accessed_by_ip_address, global::System.DateTime connection_datetime)
        {
            DBActivityLog dBActivityLog = new DBActivityLog();
            dBActivityLog.activity_log_id = activity_log_id;
            dBActivityLog.activity_datetime = activity_datetime;
            dBActivityLog.accessed_by_ip_address = accessed_by_ip_address;
            dBActivityLog.connection_datetime = connection_datetime;
            return dBActivityLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 activity_log_id
        {
            get
            {
                return _activity_log_id;
            }
            set
            {
                if (_activity_log_id != value)
                {
                    Onactivity_log_idChanging(value);
                    ReportPropertyChanging("activity_log_id");
                    _activity_log_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("activity_log_id");
                    Onactivity_log_idChanged();
                }
            }
        }
        private global::System.Int32 _activity_log_id;
        partial void Onactivity_log_idChanging(global::System.Int32 value);
        partial void Onactivity_log_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime activity_datetime
        {
            get
            {
                return _activity_datetime;
            }
            set
            {
                Onactivity_datetimeChanging(value);
                ReportPropertyChanging("activity_datetime");
                _activity_datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("activity_datetime");
                Onactivity_datetimeChanged();
            }
        }
        private global::System.DateTime _activity_datetime;
        partial void Onactivity_datetimeChanging(global::System.DateTime value);
        partial void Onactivity_datetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String accessed_by_ip_address
        {
            get
            {
                return _accessed_by_ip_address;
            }
            set
            {
                Onaccessed_by_ip_addressChanging(value);
                ReportPropertyChanging("accessed_by_ip_address");
                _accessed_by_ip_address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("accessed_by_ip_address");
                Onaccessed_by_ip_addressChanged();
            }
        }
        private global::System.String _accessed_by_ip_address;
        partial void Onaccessed_by_ip_addressChanging(global::System.String value);
        partial void Onaccessed_by_ip_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                Onclient_idChanging(value);
                ReportPropertyChanging("client_id");
                _client_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("client_id");
                Onclient_idChanged();
            }
        }
        private Nullable<global::System.Int32> _client_id;
        partial void Onclient_idChanging(Nullable<global::System.Int32> value);
        partial void Onclient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String device_id
        {
            get
            {
                return _device_id;
            }
            set
            {
                Ondevice_idChanging(value);
                ReportPropertyChanging("device_id");
                _device_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("device_id");
                Ondevice_idChanged();
            }
        }
        private global::System.String _device_id;
        partial void Ondevice_idChanging(global::System.String value);
        partial void Ondevice_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime connection_datetime
        {
            get
            {
                return _connection_datetime;
            }
            set
            {
                Onconnection_datetimeChanging(value);
                ReportPropertyChanging("connection_datetime");
                _connection_datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("connection_datetime");
                Onconnection_datetimeChanged();
            }
        }
        private global::System.DateTime _connection_datetime;
        partial void Onconnection_datetimeChanging(global::System.DateTime value);
        partial void Onconnection_datetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String action
        {
            get
            {
                return _action;
            }
            set
            {
                OnactionChanging(value);
                ReportPropertyChanging("action");
                _action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("action");
                OnactionChanged();
            }
        }
        private global::System.String _action;
        partial void OnactionChanging(global::System.String value);
        partial void OnactionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBClient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBClient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBClient object.
        /// </summary>
        /// <param name="client_id">Initial value of the client_id property.</param>
        /// <param name="contact_name_first">Initial value of the contact_name_first property.</param>
        /// <param name="contact_name_last">Initial value of the contact_name_last property.</param>
        public static DBClient CreateDBClient(global::System.Int32 client_id, global::System.String contact_name_first, global::System.String contact_name_last)
        {
            DBClient dBClient = new DBClient();
            dBClient.client_id = client_id;
            dBClient.contact_name_first = contact_name_first;
            dBClient.contact_name_last = contact_name_last;
            return dBClient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                if (_client_id != value)
                {
                    Onclient_idChanging(value);
                    ReportPropertyChanging("client_id");
                    _client_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("client_id");
                    Onclient_idChanged();
                }
            }
        }
        private global::System.Int32 _client_id;
        partial void Onclient_idChanging(global::System.Int32 value);
        partial void Onclient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String contact_name_first
        {
            get
            {
                return _contact_name_first;
            }
            set
            {
                Oncontact_name_firstChanging(value);
                ReportPropertyChanging("contact_name_first");
                _contact_name_first = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("contact_name_first");
                Oncontact_name_firstChanged();
            }
        }
        private global::System.String _contact_name_first;
        partial void Oncontact_name_firstChanging(global::System.String value);
        partial void Oncontact_name_firstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String contact_name_last
        {
            get
            {
                return _contact_name_last;
            }
            set
            {
                Oncontact_name_lastChanging(value);
                ReportPropertyChanging("contact_name_last");
                _contact_name_last = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("contact_name_last");
                Oncontact_name_lastChanged();
            }
        }
        private global::System.String _contact_name_last;
        partial void Oncontact_name_lastChanging(global::System.String value);
        partial void Oncontact_name_lastChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String company_name
        {
            get
            {
                return _company_name;
            }
            set
            {
                Oncompany_nameChanging(value);
                ReportPropertyChanging("company_name");
                _company_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("company_name");
                Oncompany_nameChanged();
            }
        }
        private global::System.String _company_name;
        partial void Oncompany_nameChanging(global::System.String value);
        partial void Oncompany_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Client_Addresses_Client", "Client_Addresses")]
        public EntityCollection<DBClientAddresses> Client_Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBClientAddresses>("MarineExchangeModel.FK_Client_Addresses_Client", "Client_Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBClientAddresses>("MarineExchangeModel.FK_Client_Addresses_Client", "Client_Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Client_Authentication_Client", "Client_Authentication")]
        public EntityCollection<DBClientAuthentication> Client_Authentication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBClientAuthentication>("MarineExchangeModel.FK_Client_Authentication_Client", "Client_Authentication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBClientAuthentication>("MarineExchangeModel.FK_Client_Authentication_Client", "Client_Authentication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Subscription_Client", "Subscription")]
        public EntityCollection<DBSubscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBSubscription>("MarineExchangeModel.FK_Subscription_Client", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBSubscription>("MarineExchangeModel.FK_Subscription_Client", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBClientAddresses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBClientAddresses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBClientAddresses object.
        /// </summary>
        /// <param name="client_address_id">Initial value of the client_address_id property.</param>
        /// <param name="billing_or_mailing_address">Initial value of the billing_or_mailing_address property.</param>
        /// <param name="street1">Initial value of the street1 property.</param>
        /// <param name="street2">Initial value of the street2 property.</param>
        /// <param name="city">Initial value of the city property.</param>
        /// <param name="state_code">Initial value of the state_code property.</param>
        /// <param name="zip_code">Initial value of the zip_code property.</param>
        /// <param name="client_id">Initial value of the client_id property.</param>
        public static DBClientAddresses CreateDBClientAddresses(global::System.Int32 client_address_id, global::System.String billing_or_mailing_address, global::System.String street1, global::System.String street2, global::System.String city, global::System.String state_code, global::System.String zip_code, global::System.Int32 client_id)
        {
            DBClientAddresses dBClientAddresses = new DBClientAddresses();
            dBClientAddresses.client_address_id = client_address_id;
            dBClientAddresses.billing_or_mailing_address = billing_or_mailing_address;
            dBClientAddresses.street1 = street1;
            dBClientAddresses.street2 = street2;
            dBClientAddresses.city = city;
            dBClientAddresses.state_code = state_code;
            dBClientAddresses.zip_code = zip_code;
            dBClientAddresses.client_id = client_id;
            return dBClientAddresses;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 client_address_id
        {
            get
            {
                return _client_address_id;
            }
            set
            {
                if (_client_address_id != value)
                {
                    Onclient_address_idChanging(value);
                    ReportPropertyChanging("client_address_id");
                    _client_address_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("client_address_id");
                    Onclient_address_idChanged();
                }
            }
        }
        private global::System.Int32 _client_address_id;
        partial void Onclient_address_idChanging(global::System.Int32 value);
        partial void Onclient_address_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String billing_or_mailing_address
        {
            get
            {
                return _billing_or_mailing_address;
            }
            set
            {
                Onbilling_or_mailing_addressChanging(value);
                ReportPropertyChanging("billing_or_mailing_address");
                _billing_or_mailing_address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("billing_or_mailing_address");
                Onbilling_or_mailing_addressChanged();
            }
        }
        private global::System.String _billing_or_mailing_address;
        partial void Onbilling_or_mailing_addressChanging(global::System.String value);
        partial void Onbilling_or_mailing_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String street1
        {
            get
            {
                return _street1;
            }
            set
            {
                Onstreet1Changing(value);
                ReportPropertyChanging("street1");
                _street1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("street1");
                Onstreet1Changed();
            }
        }
        private global::System.String _street1;
        partial void Onstreet1Changing(global::System.String value);
        partial void Onstreet1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String street2
        {
            get
            {
                return _street2;
            }
            set
            {
                Onstreet2Changing(value);
                ReportPropertyChanging("street2");
                _street2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("street2");
                Onstreet2Changed();
            }
        }
        private global::System.String _street2;
        partial void Onstreet2Changing(global::System.String value);
        partial void Onstreet2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String state_code
        {
            get
            {
                return _state_code;
            }
            set
            {
                Onstate_codeChanging(value);
                ReportPropertyChanging("state_code");
                _state_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("state_code");
                Onstate_codeChanged();
            }
        }
        private global::System.String _state_code;
        partial void Onstate_codeChanging(global::System.String value);
        partial void Onstate_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String zip_code
        {
            get
            {
                return _zip_code;
            }
            set
            {
                Onzip_codeChanging(value);
                ReportPropertyChanging("zip_code");
                _zip_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("zip_code");
                Onzip_codeChanged();
            }
        }
        private global::System.String _zip_code;
        partial void Onzip_codeChanging(global::System.String value);
        partial void Onzip_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                Onclient_idChanging(value);
                ReportPropertyChanging("client_id");
                _client_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("client_id");
                Onclient_idChanged();
            }
        }
        private global::System.Int32 _client_id;
        partial void Onclient_idChanging(global::System.Int32 value);
        partial void Onclient_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Client_Addresses_Client", "Client")]
        public DBClient Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Addresses_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Addresses_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBClient> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Addresses_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Addresses_Client", "Client", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBClientAuthentication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBClientAuthentication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBClientAuthentication object.
        /// </summary>
        /// <param name="device_id">Initial value of the device_id property.</param>
        /// <param name="device_type">Initial value of the device_type property.</param>
        /// <param name="client_id">Initial value of the client_id property.</param>
        /// <param name="authentication_id">Initial value of the authentication_id property.</param>
        public static DBClientAuthentication CreateDBClientAuthentication(global::System.String device_id, global::System.String device_type, global::System.Int32 client_id, global::System.Int32 authentication_id)
        {
            DBClientAuthentication dBClientAuthentication = new DBClientAuthentication();
            dBClientAuthentication.device_id = device_id;
            dBClientAuthentication.device_type = device_type;
            dBClientAuthentication.client_id = client_id;
            dBClientAuthentication.authentication_id = authentication_id;
            return dBClientAuthentication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String device_id
        {
            get
            {
                return _device_id;
            }
            set
            {
                Ondevice_idChanging(value);
                ReportPropertyChanging("device_id");
                _device_id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("device_id");
                Ondevice_idChanged();
            }
        }
        private global::System.String _device_id;
        partial void Ondevice_idChanging(global::System.String value);
        partial void Ondevice_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String device_type
        {
            get
            {
                return _device_type;
            }
            set
            {
                Ondevice_typeChanging(value);
                ReportPropertyChanging("device_type");
                _device_type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("device_type");
                Ondevice_typeChanged();
            }
        }
        private global::System.String _device_type;
        partial void Ondevice_typeChanging(global::System.String value);
        partial void Ondevice_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                Onclient_idChanging(value);
                ReportPropertyChanging("client_id");
                _client_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("client_id");
                Onclient_idChanged();
            }
        }
        private global::System.Int32 _client_id;
        partial void Onclient_idChanging(global::System.Int32 value);
        partial void Onclient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authentication_id
        {
            get
            {
                return _authentication_id;
            }
            set
            {
                if (_authentication_id != value)
                {
                    Onauthentication_idChanging(value);
                    ReportPropertyChanging("authentication_id");
                    _authentication_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("authentication_id");
                    Onauthentication_idChanged();
                }
            }
        }
        private global::System.Int32 _authentication_id;
        partial void Onauthentication_idChanging(global::System.Int32 value);
        partial void Onauthentication_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Client_Authentication_Client", "Client")]
        public DBClient Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Authentication_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Authentication_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBClient> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Authentication_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBClient>("MarineExchangeModel.FK_Client_Authentication_Client", "Client", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBCurrentConnection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBCurrentConnection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBCurrentConnection object.
        /// </summary>
        /// <param name="connection_Id">Initial value of the connection_Id property.</param>
        /// <param name="subscription_id">Initial value of the subscription_id property.</param>
        /// <param name="connection_ip_address">Initial value of the connection_ip_address property.</param>
        /// <param name="connection_start_datetime">Initial value of the connection_start_datetime property.</param>
        /// <param name="connection_last_datetime">Initial value of the connection_last_datetime property.</param>
        public static DBCurrentConnection CreateDBCurrentConnection(global::System.Int32 connection_Id, global::System.Int32 subscription_id, global::System.String connection_ip_address, global::System.DateTime connection_start_datetime, global::System.DateTime connection_last_datetime)
        {
            DBCurrentConnection dBCurrentConnection = new DBCurrentConnection();
            dBCurrentConnection.connection_Id = connection_Id;
            dBCurrentConnection.subscription_id = subscription_id;
            dBCurrentConnection.connection_ip_address = connection_ip_address;
            dBCurrentConnection.connection_start_datetime = connection_start_datetime;
            dBCurrentConnection.connection_last_datetime = connection_last_datetime;
            return dBCurrentConnection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_Id
        {
            get
            {
                return _connection_Id;
            }
            set
            {
                if (_connection_Id != value)
                {
                    Onconnection_IdChanging(value);
                    ReportPropertyChanging("connection_Id");
                    _connection_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("connection_Id");
                    Onconnection_IdChanged();
                }
            }
        }
        private global::System.Int32 _connection_Id;
        partial void Onconnection_IdChanging(global::System.Int32 value);
        partial void Onconnection_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 subscription_id
        {
            get
            {
                return _subscription_id;
            }
            set
            {
                Onsubscription_idChanging(value);
                ReportPropertyChanging("subscription_id");
                _subscription_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("subscription_id");
                Onsubscription_idChanged();
            }
        }
        private global::System.Int32 _subscription_id;
        partial void Onsubscription_idChanging(global::System.Int32 value);
        partial void Onsubscription_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String connection_ip_address
        {
            get
            {
                return _connection_ip_address;
            }
            set
            {
                Onconnection_ip_addressChanging(value);
                ReportPropertyChanging("connection_ip_address");
                _connection_ip_address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("connection_ip_address");
                Onconnection_ip_addressChanged();
            }
        }
        private global::System.String _connection_ip_address;
        partial void Onconnection_ip_addressChanging(global::System.String value);
        partial void Onconnection_ip_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime connection_start_datetime
        {
            get
            {
                return _connection_start_datetime;
            }
            set
            {
                Onconnection_start_datetimeChanging(value);
                ReportPropertyChanging("connection_start_datetime");
                _connection_start_datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("connection_start_datetime");
                Onconnection_start_datetimeChanged();
            }
        }
        private global::System.DateTime _connection_start_datetime;
        partial void Onconnection_start_datetimeChanging(global::System.DateTime value);
        partial void Onconnection_start_datetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime connection_last_datetime
        {
            get
            {
                return _connection_last_datetime;
            }
            set
            {
                Onconnection_last_datetimeChanging(value);
                ReportPropertyChanging("connection_last_datetime");
                _connection_last_datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("connection_last_datetime");
                Onconnection_last_datetimeChanged();
            }
        }
        private global::System.DateTime _connection_last_datetime;
        partial void Onconnection_last_datetimeChanging(global::System.DateTime value);
        partial void Onconnection_last_datetimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Current_Connection_Subscription", "Subscription")]
        public DBSubscription Subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBSubscription>("MarineExchangeModel.FK_Current_Connection_Subscription", "Subscription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBSubscription>("MarineExchangeModel.FK_Current_Connection_Subscription", "Subscription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBSubscription> SubscriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBSubscription>("MarineExchangeModel.FK_Current_Connection_Subscription", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBSubscription>("MarineExchangeModel.FK_Current_Connection_Subscription", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBDeviceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBDeviceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBDeviceType object.
        /// </summary>
        /// <param name="device_type1">Initial value of the device_type1 property.</param>
        /// <param name="device_description">Initial value of the device_description property.</param>
        public static DBDeviceType CreateDBDeviceType(global::System.String device_type1, global::System.String device_description)
        {
            DBDeviceType dBDeviceType = new DBDeviceType();
            dBDeviceType.device_type1 = device_type1;
            dBDeviceType.device_description = device_description;
            return dBDeviceType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String device_type1
        {
            get
            {
                return _device_type1;
            }
            set
            {
                if (_device_type1 != value)
                {
                    Ondevice_type1Changing(value);
                    ReportPropertyChanging("device_type1");
                    _device_type1 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("device_type1");
                    Ondevice_type1Changed();
                }
            }
        }
        private global::System.String _device_type1;
        partial void Ondevice_type1Changing(global::System.String value);
        partial void Ondevice_type1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String device_description
        {
            get
            {
                return _device_description;
            }
            set
            {
                Ondevice_descriptionChanging(value);
                ReportPropertyChanging("device_description");
                _device_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("device_description");
                Ondevice_descriptionChanged();
            }
        }
        private global::System.String _device_description;
        partial void Ondevice_descriptionChanging(global::System.String value);
        partial void Ondevice_descriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBErrorLog object.
        /// </summary>
        /// <param name="error_log_id">Initial value of the error_log_id property.</param>
        /// <param name="error_description">Initial value of the error_description property.</param>
        /// <param name="error_datetime">Initial value of the error_datetime property.</param>
        public static DBErrorLog CreateDBErrorLog(global::System.Int32 error_log_id, global::System.String error_description, global::System.DateTime error_datetime)
        {
            DBErrorLog dBErrorLog = new DBErrorLog();
            dBErrorLog.error_log_id = error_log_id;
            dBErrorLog.error_description = error_description;
            dBErrorLog.error_datetime = error_datetime;
            return dBErrorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 error_log_id
        {
            get
            {
                return _error_log_id;
            }
            set
            {
                if (_error_log_id != value)
                {
                    Onerror_log_idChanging(value);
                    ReportPropertyChanging("error_log_id");
                    _error_log_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("error_log_id");
                    Onerror_log_idChanged();
                }
            }
        }
        private global::System.Int32 _error_log_id;
        partial void Onerror_log_idChanging(global::System.Int32 value);
        partial void Onerror_log_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String error_description
        {
            get
            {
                return _error_description;
            }
            set
            {
                Onerror_descriptionChanging(value);
                ReportPropertyChanging("error_description");
                _error_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("error_description");
                Onerror_descriptionChanged();
            }
        }
        private global::System.String _error_description;
        partial void Onerror_descriptionChanging(global::System.String value);
        partial void Onerror_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stack_trace
        {
            get
            {
                return _stack_trace;
            }
            set
            {
                Onstack_traceChanging(value);
                ReportPropertyChanging("stack_trace");
                _stack_trace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("stack_trace");
                Onstack_traceChanged();
            }
        }
        private global::System.String _stack_trace;
        partial void Onstack_traceChanging(global::System.String value);
        partial void Onstack_traceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String error_thrown_from
        {
            get
            {
                return _error_thrown_from;
            }
            set
            {
                Onerror_thrown_fromChanging(value);
                ReportPropertyChanging("error_thrown_from");
                _error_thrown_from = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("error_thrown_from");
                Onerror_thrown_fromChanged();
            }
        }
        private global::System.String _error_thrown_from;
        partial void Onerror_thrown_fromChanging(global::System.String value);
        partial void Onerror_thrown_fromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String inner_exception
        {
            get
            {
                return _inner_exception;
            }
            set
            {
                Oninner_exceptionChanging(value);
                ReportPropertyChanging("inner_exception");
                _inner_exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("inner_exception");
                Oninner_exceptionChanged();
            }
        }
        private global::System.String _inner_exception;
        partial void Oninner_exceptionChanging(global::System.String value);
        partial void Oninner_exceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String target_site
        {
            get
            {
                return _target_site;
            }
            set
            {
                Ontarget_siteChanging(value);
                ReportPropertyChanging("target_site");
                _target_site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("target_site");
                Ontarget_siteChanged();
            }
        }
        private global::System.String _target_site;
        partial void Ontarget_siteChanging(global::System.String value);
        partial void Ontarget_siteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime error_datetime
        {
            get
            {
                return _error_datetime;
            }
            set
            {
                Onerror_datetimeChanging(value);
                ReportPropertyChanging("error_datetime");
                _error_datetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("error_datetime");
                Onerror_datetimeChanged();
            }
        }
        private global::System.DateTime _error_datetime;
        partial void Onerror_datetimeChanging(global::System.DateTime value);
        partial void Onerror_datetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nmea_feed_id
        {
            get
            {
                return _nmea_feed_id;
            }
            set
            {
                Onnmea_feed_idChanging(value);
                ReportPropertyChanging("nmea_feed_id");
                _nmea_feed_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nmea_feed_id");
                Onnmea_feed_idChanged();
            }
        }
        private Nullable<global::System.Int32> _nmea_feed_id;
        partial void Onnmea_feed_idChanging(Nullable<global::System.Int32> value);
        partial void Onnmea_feed_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                Onclient_idChanging(value);
                ReportPropertyChanging("client_id");
                _client_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("client_id");
                Onclient_idChanged();
            }
        }
        private Nullable<global::System.Int32> _client_id;
        partial void Onclient_idChanging(Nullable<global::System.Int32> value);
        partial void Onclient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String device_id
        {
            get
            {
                return _device_id;
            }
            set
            {
                Ondevice_idChanging(value);
                ReportPropertyChanging("device_id");
                _device_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("device_id");
                Ondevice_idChanged();
            }
        }
        private global::System.String _device_id;
        partial void Ondevice_idChanging(global::System.String value);
        partial void Ondevice_idChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBNMEAFeeds")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBNMEAFeeds : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBNMEAFeeds object.
        /// </summary>
        /// <param name="nmea_feed_id">Initial value of the nmea_feed_id property.</param>
        /// <param name="feed_name">Initial value of the feed_name property.</param>
        /// <param name="feed_description">Initial value of the feed_description property.</param>
        /// <param name="subscription_price">Initial value of the subscription_price property.</param>
        /// <param name="ip_address">Initial value of the ip_address property.</param>
        /// <param name="server_port_number">Initial value of the server_port_number property.</param>
        /// <param name="northwest_coordinates">Initial value of the northwest_coordinates property.</param>
        /// <param name="northeast_coordinates">Initial value of the northeast_coordinates property.</param>
        /// <param name="southwest_coordinates">Initial value of the southwest_coordinates property.</param>
        /// <param name="southeast_coordinates">Initial value of the southeast_coordinates property.</param>
        public static DBNMEAFeeds CreateDBNMEAFeeds(global::System.Int32 nmea_feed_id, global::System.String feed_name, global::System.String feed_description, global::System.Decimal subscription_price, global::System.String ip_address, global::System.Int32 server_port_number, global::System.String northwest_coordinates, global::System.String northeast_coordinates, global::System.String southwest_coordinates, global::System.String southeast_coordinates)
        {
            DBNMEAFeeds dBNMEAFeeds = new DBNMEAFeeds();
            dBNMEAFeeds.nmea_feed_id = nmea_feed_id;
            dBNMEAFeeds.feed_name = feed_name;
            dBNMEAFeeds.feed_description = feed_description;
            dBNMEAFeeds.subscription_price = subscription_price;
            dBNMEAFeeds.ip_address = ip_address;
            dBNMEAFeeds.server_port_number = server_port_number;
            dBNMEAFeeds.northwest_coordinates = northwest_coordinates;
            dBNMEAFeeds.northeast_coordinates = northeast_coordinates;
            dBNMEAFeeds.southwest_coordinates = southwest_coordinates;
            dBNMEAFeeds.southeast_coordinates = southeast_coordinates;
            return dBNMEAFeeds;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nmea_feed_id
        {
            get
            {
                return _nmea_feed_id;
            }
            set
            {
                if (_nmea_feed_id != value)
                {
                    Onnmea_feed_idChanging(value);
                    ReportPropertyChanging("nmea_feed_id");
                    _nmea_feed_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("nmea_feed_id");
                    Onnmea_feed_idChanged();
                }
            }
        }
        private global::System.Int32 _nmea_feed_id;
        partial void Onnmea_feed_idChanging(global::System.Int32 value);
        partial void Onnmea_feed_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_name
        {
            get
            {
                return _feed_name;
            }
            set
            {
                Onfeed_nameChanging(value);
                ReportPropertyChanging("feed_name");
                _feed_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_name");
                Onfeed_nameChanged();
            }
        }
        private global::System.String _feed_name;
        partial void Onfeed_nameChanging(global::System.String value);
        partial void Onfeed_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_description
        {
            get
            {
                return _feed_description;
            }
            set
            {
                Onfeed_descriptionChanging(value);
                ReportPropertyChanging("feed_description");
                _feed_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_description");
                Onfeed_descriptionChanged();
            }
        }
        private global::System.String _feed_description;
        partial void Onfeed_descriptionChanging(global::System.String value);
        partial void Onfeed_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal subscription_price
        {
            get
            {
                return _subscription_price;
            }
            set
            {
                Onsubscription_priceChanging(value);
                ReportPropertyChanging("subscription_price");
                _subscription_price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("subscription_price");
                Onsubscription_priceChanged();
            }
        }
        private global::System.Decimal _subscription_price;
        partial void Onsubscription_priceChanging(global::System.Decimal value);
        partial void Onsubscription_priceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ip_address
        {
            get
            {
                return _ip_address;
            }
            set
            {
                Onip_addressChanging(value);
                ReportPropertyChanging("ip_address");
                _ip_address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ip_address");
                Onip_addressChanged();
            }
        }
        private global::System.String _ip_address;
        partial void Onip_addressChanging(global::System.String value);
        partial void Onip_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 server_port_number
        {
            get
            {
                return _server_port_number;
            }
            set
            {
                Onserver_port_numberChanging(value);
                ReportPropertyChanging("server_port_number");
                _server_port_number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("server_port_number");
                Onserver_port_numberChanged();
            }
        }
        private global::System.Int32 _server_port_number;
        partial void Onserver_port_numberChanging(global::System.Int32 value);
        partial void Onserver_port_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String northwest_coordinates
        {
            get
            {
                return _northwest_coordinates;
            }
            set
            {
                Onnorthwest_coordinatesChanging(value);
                ReportPropertyChanging("northwest_coordinates");
                _northwest_coordinates = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("northwest_coordinates");
                Onnorthwest_coordinatesChanged();
            }
        }
        private global::System.String _northwest_coordinates;
        partial void Onnorthwest_coordinatesChanging(global::System.String value);
        partial void Onnorthwest_coordinatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String northeast_coordinates
        {
            get
            {
                return _northeast_coordinates;
            }
            set
            {
                Onnortheast_coordinatesChanging(value);
                ReportPropertyChanging("northeast_coordinates");
                _northeast_coordinates = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("northeast_coordinates");
                Onnortheast_coordinatesChanged();
            }
        }
        private global::System.String _northeast_coordinates;
        partial void Onnortheast_coordinatesChanging(global::System.String value);
        partial void Onnortheast_coordinatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String southwest_coordinates
        {
            get
            {
                return _southwest_coordinates;
            }
            set
            {
                Onsouthwest_coordinatesChanging(value);
                ReportPropertyChanging("southwest_coordinates");
                _southwest_coordinates = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("southwest_coordinates");
                Onsouthwest_coordinatesChanged();
            }
        }
        private global::System.String _southwest_coordinates;
        partial void Onsouthwest_coordinatesChanging(global::System.String value);
        partial void Onsouthwest_coordinatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String southeast_coordinates
        {
            get
            {
                return _southeast_coordinates;
            }
            set
            {
                Onsoutheast_coordinatesChanging(value);
                ReportPropertyChanging("southeast_coordinates");
                _southeast_coordinates = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("southeast_coordinates");
                Onsoutheast_coordinatesChanged();
            }
        }
        private global::System.String _southeast_coordinates;
        partial void Onsoutheast_coordinatesChanging(global::System.String value);
        partial void Onsoutheast_coordinatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Subscription_NMEA_Feeds", "Subscription")]
        public EntityCollection<DBSubscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBSubscription>("MarineExchangeModel.FK_Subscription_NMEA_Feeds", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBSubscription>("MarineExchangeModel.FK_Subscription_NMEA_Feeds", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MarineExchangeModel", Name="DBSubscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DBSubscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DBSubscription object.
        /// </summary>
        /// <param name="subscription_id">Initial value of the subscription_id property.</param>
        /// <param name="client_id">Initial value of the client_id property.</param>
        /// <param name="maximum_allowable_connections">Initial value of the maximum_allowable_connections property.</param>
        /// <param name="nmea_feed_id">Initial value of the nmea_feed_id property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static DBSubscription CreateDBSubscription(global::System.Int32 subscription_id, global::System.Int32 client_id, global::System.Int32 maximum_allowable_connections, global::System.Int32 nmea_feed_id, global::System.Boolean active)
        {
            DBSubscription dBSubscription = new DBSubscription();
            dBSubscription.subscription_id = subscription_id;
            dBSubscription.client_id = client_id;
            dBSubscription.maximum_allowable_connections = maximum_allowable_connections;
            dBSubscription.nmea_feed_id = nmea_feed_id;
            dBSubscription.active = active;
            return dBSubscription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 subscription_id
        {
            get
            {
                return _subscription_id;
            }
            set
            {
                if (_subscription_id != value)
                {
                    Onsubscription_idChanging(value);
                    ReportPropertyChanging("subscription_id");
                    _subscription_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("subscription_id");
                    Onsubscription_idChanged();
                }
            }
        }
        private global::System.Int32 _subscription_id;
        partial void Onsubscription_idChanging(global::System.Int32 value);
        partial void Onsubscription_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                Onclient_idChanging(value);
                ReportPropertyChanging("client_id");
                _client_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("client_id");
                Onclient_idChanged();
            }
        }
        private global::System.Int32 _client_id;
        partial void Onclient_idChanging(global::System.Int32 value);
        partial void Onclient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 maximum_allowable_connections
        {
            get
            {
                return _maximum_allowable_connections;
            }
            set
            {
                Onmaximum_allowable_connectionsChanging(value);
                ReportPropertyChanging("maximum_allowable_connections");
                _maximum_allowable_connections = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maximum_allowable_connections");
                Onmaximum_allowable_connectionsChanged();
            }
        }
        private global::System.Int32 _maximum_allowable_connections;
        partial void Onmaximum_allowable_connectionsChanging(global::System.Int32 value);
        partial void Onmaximum_allowable_connectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nmea_feed_id
        {
            get
            {
                return _nmea_feed_id;
            }
            set
            {
                Onnmea_feed_idChanging(value);
                ReportPropertyChanging("nmea_feed_id");
                _nmea_feed_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nmea_feed_id");
                Onnmea_feed_idChanged();
            }
        }
        private global::System.Int32 _nmea_feed_id;
        partial void Onnmea_feed_idChanging(global::System.Int32 value);
        partial void Onnmea_feed_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Subscription_Client", "Client")]
        public DBClient Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Subscription_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Subscription_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBClient> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBClient>("MarineExchangeModel.FK_Subscription_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBClient>("MarineExchangeModel.FK_Subscription_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Current_Connection_Subscription", "Current_Connection")]
        public EntityCollection<DBCurrentConnection> Current_Connection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DBCurrentConnection>("MarineExchangeModel.FK_Current_Connection_Subscription", "Current_Connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DBCurrentConnection>("MarineExchangeModel.FK_Current_Connection_Subscription", "Current_Connection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MarineExchangeModel", "FK_Subscription_NMEA_Feeds", "NMEA_Feeds")]
        public DBNMEAFeeds NMEA_Feeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBNMEAFeeds>("MarineExchangeModel.FK_Subscription_NMEA_Feeds", "NMEA_Feeds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBNMEAFeeds>("MarineExchangeModel.FK_Subscription_NMEA_Feeds", "NMEA_Feeds").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DBNMEAFeeds> NMEA_FeedsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DBNMEAFeeds>("MarineExchangeModel.FK_Subscription_NMEA_Feeds", "NMEA_Feeds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DBNMEAFeeds>("MarineExchangeModel.FK_Subscription_NMEA_Feeds", "NMEA_Feeds", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MarineExchangeModel", Name="CheckUser_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CheckUser_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckUser_Result object.
        /// </summary>
        /// <param name="subscription_id">Initial value of the subscription_id property.</param>
        /// <param name="client_id">Initial value of the client_id property.</param>
        /// <param name="maximum_allowable_connections">Initial value of the maximum_allowable_connections property.</param>
        /// <param name="nmea_feed_id">Initial value of the nmea_feed_id property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static CheckUser_Result CreateCheckUser_Result(global::System.Int32 subscription_id, global::System.Int32 client_id, global::System.Int32 maximum_allowable_connections, global::System.Int32 nmea_feed_id, global::System.Boolean active)
        {
            CheckUser_Result checkUser_Result = new CheckUser_Result();
            checkUser_Result.subscription_id = subscription_id;
            checkUser_Result.client_id = client_id;
            checkUser_Result.maximum_allowable_connections = maximum_allowable_connections;
            checkUser_Result.nmea_feed_id = nmea_feed_id;
            checkUser_Result.active = active;
            return checkUser_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 subscription_id
        {
            get
            {
                return _subscription_id;
            }
            set
            {
                Onsubscription_idChanging(value);
                ReportPropertyChanging("subscription_id");
                _subscription_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("subscription_id");
                Onsubscription_idChanged();
            }
        }
        private global::System.Int32 _subscription_id;
        partial void Onsubscription_idChanging(global::System.Int32 value);
        partial void Onsubscription_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 client_id
        {
            get
            {
                return _client_id;
            }
            set
            {
                Onclient_idChanging(value);
                ReportPropertyChanging("client_id");
                _client_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("client_id");
                Onclient_idChanged();
            }
        }
        private global::System.Int32 _client_id;
        partial void Onclient_idChanging(global::System.Int32 value);
        partial void Onclient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 maximum_allowable_connections
        {
            get
            {
                return _maximum_allowable_connections;
            }
            set
            {
                Onmaximum_allowable_connectionsChanging(value);
                ReportPropertyChanging("maximum_allowable_connections");
                _maximum_allowable_connections = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("maximum_allowable_connections");
                Onmaximum_allowable_connectionsChanged();
            }
        }
        private global::System.Int32 _maximum_allowable_connections;
        partial void Onmaximum_allowable_connectionsChanging(global::System.Int32 value);
        partial void Onmaximum_allowable_connectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nmea_feed_id
        {
            get
            {
                return _nmea_feed_id;
            }
            set
            {
                Onnmea_feed_idChanging(value);
                ReportPropertyChanging("nmea_feed_id");
                _nmea_feed_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nmea_feed_id");
                Onnmea_feed_idChanged();
            }
        }
        private global::System.Int32 _nmea_feed_id;
        partial void Onnmea_feed_idChanging(global::System.Int32 value);
        partial void Onnmea_feed_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="MarineExchangeModel", Name="GetSubscriptions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetSubscriptions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetSubscriptions_Result object.
        /// </summary>
        /// <param name="subscription_id">Initial value of the subscription_id property.</param>
        /// <param name="feed_name">Initial value of the feed_name property.</param>
        /// <param name="nmea_feed_id">Initial value of the nmea_feed_id property.</param>
        /// <param name="feed_description">Initial value of the feed_description property.</param>
        /// <param name="subscription_price">Initial value of the subscription_price property.</param>
        public static GetSubscriptions_Result CreateGetSubscriptions_Result(global::System.Int32 subscription_id, global::System.String feed_name, global::System.Int32 nmea_feed_id, global::System.String feed_description, global::System.Decimal subscription_price)
        {
            GetSubscriptions_Result getSubscriptions_Result = new GetSubscriptions_Result();
            getSubscriptions_Result.subscription_id = subscription_id;
            getSubscriptions_Result.feed_name = feed_name;
            getSubscriptions_Result.nmea_feed_id = nmea_feed_id;
            getSubscriptions_Result.feed_description = feed_description;
            getSubscriptions_Result.subscription_price = subscription_price;
            return getSubscriptions_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 subscription_id
        {
            get
            {
                return _subscription_id;
            }
            set
            {
                Onsubscription_idChanging(value);
                ReportPropertyChanging("subscription_id");
                _subscription_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("subscription_id");
                Onsubscription_idChanged();
            }
        }
        private global::System.Int32 _subscription_id;
        partial void Onsubscription_idChanging(global::System.Int32 value);
        partial void Onsubscription_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_name
        {
            get
            {
                return _feed_name;
            }
            set
            {
                Onfeed_nameChanging(value);
                ReportPropertyChanging("feed_name");
                _feed_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_name");
                Onfeed_nameChanged();
            }
        }
        private global::System.String _feed_name;
        partial void Onfeed_nameChanging(global::System.String value);
        partial void Onfeed_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nmea_feed_id
        {
            get
            {
                return _nmea_feed_id;
            }
            set
            {
                Onnmea_feed_idChanging(value);
                ReportPropertyChanging("nmea_feed_id");
                _nmea_feed_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nmea_feed_id");
                Onnmea_feed_idChanged();
            }
        }
        private global::System.Int32 _nmea_feed_id;
        partial void Onnmea_feed_idChanging(global::System.Int32 value);
        partial void Onnmea_feed_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String feed_description
        {
            get
            {
                return _feed_description;
            }
            set
            {
                Onfeed_descriptionChanging(value);
                ReportPropertyChanging("feed_description");
                _feed_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("feed_description");
                Onfeed_descriptionChanged();
            }
        }
        private global::System.String _feed_description;
        partial void Onfeed_descriptionChanging(global::System.String value);
        partial void Onfeed_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal subscription_price
        {
            get
            {
                return _subscription_price;
            }
            set
            {
                Onsubscription_priceChanging(value);
                ReportPropertyChanging("subscription_price");
                _subscription_price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("subscription_price");
                Onsubscription_priceChanged();
            }
        }
        private global::System.Decimal _subscription_price;
        partial void Onsubscription_priceChanging(global::System.Decimal value);
        partial void Onsubscription_priceChanged();

        #endregion
    }

    #endregion
    
}
